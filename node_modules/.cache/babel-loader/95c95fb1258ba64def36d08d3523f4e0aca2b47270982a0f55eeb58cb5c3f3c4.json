{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwan\\\\Desktop\\\\\\uAC1C\\uBC1C\\uC790\\\\amazing-admin-web\\\\src\\\\components\\\\UserProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n\n  // useEffect(() => {\n  //     // 서버에 현재 로그인 상태를 확인하는 요청\n  //     console.log(\"TSET  UserProvider !! ::   \")\n  //     console.log(\"TSET  UserProvider  user  !! ::   \" , user)\n  //     axios.get('http://localhost:8080/api/v1/checkSession')\n  //         .then(response => {\n  //             // 서버에서 반환된 사용자 정보를 상태에 설정\n  //             console.log(\"TEST response UserProvider:::: \" , response)\n  //             setUser(response.data);\n  //         })\n  //         .catch(error => {\n  //             console.error(\"로그인 상태 확인 중 오류 발생:\", error);\n  //             setUser(null);\n  //         });\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"TEST USER ::\", user);\n  }, [user]);\n  const logout = () => {\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","_ref","_s","children","user","setUser","console","log","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kwan/Desktop/개발자/amazing-admin-web/src/components/UserProvider.jsx"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     // 서버에 현재 로그인 상태를 확인하는 요청\r\n    //     console.log(\"TSET  UserProvider !! ::   \")\r\n    //     console.log(\"TSET  UserProvider  user  !! ::   \" , user)\r\n    //     axios.get('http://localhost:8080/api/v1/checkSession')\r\n    //         .then(response => {\r\n    //             // 서버에서 반환된 사용자 정보를 상태에 설정\r\n    //             console.log(\"TEST response UserProvider:::: \" , response)\r\n    //             setUser(response.data);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.error(\"로그인 상태 확인 중 오류 발생:\", error);\r\n    //             setUser(null);\r\n    //         });\r\n    // }, []);\r\n\r\n\r\n    useEffect(() =>{\r\n        console.log(\"TEST USER ::\" , user)\r\n    },[user])\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser, logout }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAE;AAE1C,OAAO,MAAMO,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAGtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGAD,SAAS,CAAC,MAAK;IACXY,OAAO,CAACC,GAAG,CAAC,cAAc,EAAGH,IAAI,CAAC;EACtC,CAAC,EAAC,CAACA,IAAI,CAAC,CAAC;EAET,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACjBH,OAAO,CAAC,IAAI,CAAC;EAGjB,CAAC;EAGD,oBACIP,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEN,IAAI;MAAEC,OAAO;MAAEG;IAAO,CAAE;IAAAL,QAAA,EAClDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAE/B,CAAC;AAACZ,EAAA,CArCWF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}