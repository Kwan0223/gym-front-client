[{"C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\index.js":"1","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\App.js":"2","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\login.jsx":"3","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\Detail.jsx":"4","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\SignUp.jsx":"5","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\MyPage.jsx":"6","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\components\\footer.jsx":"7","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\components\\UserProvider.jsx":"8","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\components\\header.jsx":"9","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\components\\SessionCheck.jsx":"10","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\layout\\content.jsx":"11","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\TrainerInfo .jsx":"12","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\PointInfo.jsx":"13","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\card.jsx":"14","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\layout\\Pagination.jsx":"15","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\SearchBar.jsx":"16","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\KakaoMap.jsx":"17","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\ImageSlider.jsx":"18","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\Calender.jsx":"19"},{"size":226,"mtime":1697433953575,"results":"20","hashOfConfig":"21"},{"size":1361,"mtime":1693721283366,"results":"22","hashOfConfig":"21"},{"size":2361,"mtime":1697091531868,"results":"23","hashOfConfig":"21"},{"size":2031,"mtime":1693209628185,"results":"24","hashOfConfig":"21"},{"size":4260,"mtime":1697434077935,"results":"25","hashOfConfig":"21"},{"size":6752,"mtime":1697434031384,"results":"26","hashOfConfig":"21"},{"size":652,"mtime":1693208627850,"results":"27","hashOfConfig":"21"},{"size":1287,"mtime":1693721137816,"results":"28","hashOfConfig":"21"},{"size":5925,"mtime":1693719368300,"results":"29","hashOfConfig":"21"},{"size":980,"mtime":1694158186052,"results":"30","hashOfConfig":"21"},{"size":2310,"mtime":1689057071452,"results":"31","hashOfConfig":"21"},{"size":1103,"mtime":1693290610638,"results":"32","hashOfConfig":"21"},{"size":1955,"mtime":1693222936010,"results":"33","hashOfConfig":"21"},{"size":4768,"mtime":1693291553669,"results":"34","hashOfConfig":"21"},{"size":629,"mtime":1686549293965,"results":"35","hashOfConfig":"21"},{"size":1239,"mtime":1686986816232,"results":"36","hashOfConfig":"21"},{"size":1949,"mtime":1691044758089,"results":"37","hashOfConfig":"21"},{"size":1026,"mtime":1689057083083,"results":"38","hashOfConfig":"21"},{"size":9309,"mtime":1697433939374,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g9fabj",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},"C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\index.js",[],[],"C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\App.js",["110","111","112"],[],"import './css/App.css';\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport Detail from \"./page/Detail\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Content from \"./layout/content\";\nimport Login from \"./page/login\";\nimport SignUp from \"./page/SignUp\";\nimport MyPage from \"./page/MyPage\"; // 추가\nimport { UserProvider } from './components/UserProvider'; // or wherever you define UserProvider\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SessionCheck from \"./components/SessionCheck\";\n\n\n\nfunction App() {\n\n    return (\n        <UserProvider>\n            <div className=\"App\">\n                <Router>\n                    <SessionCheck/>\n                    <Header/>\n                    <Routes>\n                        <Route path=\"/\" element={<Content/>}/>\n                        <Route path=\"/detail/:gymName\" element={<Detail/>}/>\n                        <Route path=\"/Login\" element={<Login/>}/>\n                        <Route path=\"/SignUp\" element={<SignUp/>}/>\n                        <Route path=\"/MyPage\" element={<MyPage/>}/>\n                    </Routes>\n                    <Footer/>\n                </Router>\n            </div>\n        </UserProvider>\n    );\n}\n\n\nexport default App;\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\login.jsx",["113"],[],"import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/Login.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { UserContext } from '../components/UserProvider';\r\n\r\nconst Login = () => {\r\n\r\n    const [userInfo, setUserInfo] = useState({\r\n        email: '',\r\n        pwd: ''\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (event) => {\r\n        setUserInfo({...userInfo, [event.target.name]: event.target.value});\r\n    };\r\n\r\n    const { setUser } = useContext(UserContext);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n            // const res = await axios.post('http://localhost:8080/api/v1/users/login', userInfo, {\r\n            const res = await axios.post('/api/v1/users/login', userInfo, {\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\",\r\n                },\r\n            });\r\n\r\n            console.log(\"TEST RES  data: \", res.data);\r\n            console.log(\"TEST UserInfo : \" , userInfo);\r\n            setUser(res.data);\r\n            navigate('/');\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h2 className=\"login-heading\">Login</h2>\r\n            <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\"> Email: </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        className=\"form-input\"\r\n                        value={userInfo.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password: </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"pwd\"\r\n                        name=\"pwd\"\r\n                        className=\"form-input\"\r\n                        value={userInfo.pwd}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"login-button\">Log in</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\Detail.jsx",["114"],[],"import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport '../css/Detail.css';\r\nimport PointInfo from \"./PointInfo\";\r\nimport TrainerInfo from \"./TrainerInfo \";\r\n\r\nconst Detail = () => {\r\n    const location = useLocation();\r\n    const {data} = location.state;\r\n    const [activeTab, setActiveTab] = useState('point-Info');\r\n\r\n    return (\r\n        <div className=\"gymContent\">\r\n            <div className='pointName'>\r\n                <h2>{data.pointName}</h2>\r\n            </div>\r\n            <div className=\"gymImgs\">\r\n                <div className=\"leftImages\">\r\n                    <img src={data.pointImagePath[0]} alt={`gym 1`} id={`img1`} />\r\n                </div>\r\n                <div className=\"rightUpImages\">\r\n                    <img src={data.pointImagePath[1]} alt={`gym 2`} id={`img2`} />\r\n                </div>\r\n                <div className=\"rightDownImages\">\r\n                    <img src={data.pointImagePath[2]} alt={`gym 3`} id={`img3`} />\r\n                    <img src={data.pointImagePath[3]} alt={`gym 4`} id={`img4`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"point-Buttons\">\r\n                <button\r\n                    className={`point-Button point-Info ${activeTab === 'point-Info' ? 'active' : ''}`}\r\n                    onClick={() => setActiveTab(\"point-Info\")}>\r\n                    헬스장 정보\r\n                </button>\r\n                <button\r\n                    className={`point-Button point-TrainerInfo ${activeTab === 'point-TrainerInfo' ? 'active' : ''}`}\r\n                    onClick={() => setActiveTab(\"point-TrainerInfo\")}>\r\n                    트레이너 정보\r\n                </button>\r\n            </div>\r\n            <div className=\"selected-Content\">\r\n                {activeTab === 'point-Info' && <PointInfo data={data} />}\r\n                {activeTab === 'point-TrainerInfo' && <TrainerInfo data={data} />}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Detail;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\SignUp.jsx",["115","116","117","118","119"],[],"import React, {useState} from 'react';\r\nimport '../css/SingUp.css';\r\nimport axios from \"axios\";\r\n\r\nconst SignUp = () => {\r\n    const [userInfo , setUserInfo ] = useState({\r\n\r\n        name : '',\r\n        email : '',\r\n        address : '',\r\n        number : '',\r\n        pwd : '',\r\n        pwdCheck : ''\r\n    });\r\n    const handleChange = (event) => {\r\n        setUserInfo({...userInfo, [event.target.name]: event.target.value});\r\n    };\r\n\r\n    const dataCheck = (data) => {\r\n        console.log(\"TEST User Info : \" , userInfo)\r\n        console.log(\"TEST data : \" , data)\r\n        if(!userInfo.name){\r\n            alert(\"이름을 작성하지 않았습니다.\")\r\n        }else if(!userInfo.email){\r\n            alert(\"이메일을 작성하지 않았습니다.\")\r\n        }else if (!userInfo.pwd){\r\n            alert(\"비밀번호를 작성하지 않았습니다\")\r\n        }else if(!userInfo.pwdCheck){\r\n            alert(\"비밀번호 확인을 작성해주세요.\")\r\n        }else if(userInfo.pwd !== userInfo.pwdCheck){\r\n            alert(\"비밀번호가 일치하지 않습니다.\")\r\n        } else if (data == 'pwd'){\r\n            alert (\"비밀번호 유효성 체크 부탁드립니다.\")\r\n        } else if (data == 'email'){\r\n            alert(\"이메일 유효성 체크 부탁드립니다.\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        dataCheck();\r\n\r\n\r\n        // axios.post('http://localhost:8080/signUp', userInfo, {\r\n        axios.post('/signUp', userInfo, {\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n            },\r\n        })\r\n            .then(res => {\r\n                console.log(\"TEST RES  : \", res);\r\n                console.log(\"TEST RESDATA  : \", res.data);\r\n                console.log(\"TEST UserInfo : \" , userInfo)\r\n                if(res != 'Success'){\r\n\r\n                    if(res.data == 'PwdCheck') {\r\n                        dataCheck('pwd');\r\n                    }else if (res.data == 'EmailCheck'){\r\n                        dataCheck('email');\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <div className=\"signup-content\">\r\n                <h2 className=\"signup-heading\">회원가입</h2>\r\n                <form className=\"signup-form\">\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"이름\" className=\"form-input\"  onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"이메일\" className=\"form-input\"  onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" id=\"address\" name=\"address\" placeholder=\"주소\" className=\"form-input\"  onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" id=\"number\" name=\"number\" placeholder=\"핸드폰번호(ex 01076778240)\" className=\"form-input\"  onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"password\" id=\"pwd\" name=\"pwd\" placeholder=\"비밀번호\" className=\"form-input\"  onChange={handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"password\" id=\"pwdCheck\" name=\"pwdCheck\" placeholder=\"비밀번호 확인\" className=\"form-input\" onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"signup-button\" onClick={handleSubmit}>회원가입</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"login-link\">\r\n                    이미 회원이신가요? <a href=\"/login\">로그인</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\MyPage.jsx",["120","121","122","123"],[],"import React, {useContext, useEffect, useState, useRef} from 'react';\r\nimport '../css/MyPage.css';\r\nimport {UserContext} from \"../components/UserProvider\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst MyPage = () => {\r\n    const {user, setUser, logout} = useContext(UserContext);\r\n    const [imageSrc, setImageSrc] = useState(null);\r\n    const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\r\n    const [passwordChanged, setPasswordChanged] = useState(false);\r\n\r\n    const [userInfo, setUserInfo] = useState({\r\n        address: user ? user.address : \"\",\r\n        phone: user ? user.number : \"\",\r\n        imagePath: \"\"\r\n    });\r\n\r\n\r\n    const fileInput = useRef();\r\n    const navigate = useNavigate();\r\n    const newPasswordRef = useRef(null);\r\n\r\n    const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];\r\n\r\n        if (file) {\r\n            // Create an Object URL\r\n            const objectURL = URL.createObjectURL(file);\r\n            console.log(\"Object URL:\", objectURL);\r\n\r\n            // Assign it to the image source\r\n            setImageSrc(objectURL);\r\n            setUserInfo(prevState => ({ ...prevState, imagePath: objectURL }));\r\n        } else {\r\n            setImageSrc(null);\r\n        }\r\n    };\r\n    const handleEditProfileClick = () => {\r\n        fileInput.current.click();\r\n    };\r\n\r\n    const handleSavePassword = () => {\r\n         console.log(\"TEST User Pwd : \" , user.pwd)\r\n\r\n        if (newPassword !== passwordConfirmation) {\r\n            alert(' 두개의 비밀번호가 다릅니다. 확인부탁드립니다.');\r\n            setPasswordConfirmation(\"\");\r\n            newPasswordRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        const userInfo = {\r\n            email: user.email,\r\n            newPwd: newPassword\r\n        };\r\n        // axios.post('http://localhost:8080/api/v1/users/changePassword', userInfo)\r\n        axios.post('/api/v1/users/changePassword', userInfo)\r\n            .then(response => {\r\n\r\n                setPasswordChanged(true);\r\n                setIsPasswordModalOpen(false);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                if (error.response && error.response.data) {\r\n                    console.log(\"서버로부터의 메시지:\", error.response.data.msg); // 서버로부터의 메시지를 출력합니다.\r\n                    alert(error.response.data.msg);\r\n                    setIsPasswordModalOpen(true);\r\n                    return\r\n                }\r\n            });\r\n\r\n        setPasswordChanged(true);\r\n        setIsPasswordModalOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        if(user == null){\r\n            navigate('/')\r\n        }\r\n    }, [user])\r\n\r\n\r\n\r\n    const handleOpenPasswordModal = () => {\r\n        setNewPassword('');\r\n        setPasswordConfirmation('');\r\n        setIsPasswordModalOpen(true);\r\n    };\r\n\r\n    const handleClosePasswordModal = () => {\r\n        setIsPasswordModalOpen(false);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        // const serverUrl = \"http://localhost:8080/api/v1/users/updateProfile\";\r\n        const serverUrl = \"/api/v1/users/updateProfile\";\r\n\r\n        const data = {\r\n            email: user.email,\r\n            ...userInfo\r\n        };\r\n\r\n        axios.post(serverUrl, data)\r\n            .then(response => {\r\n                console.log(response);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"MyPage-container\">\r\n            <div className=\"MyPage-image-container\">\r\n                { !imageSrc ? (\r\n                    <p>There is no image</p>\r\n                ) : (\r\n                    <img className=\"MyPage-image\" src={imageSrc} alt=\"MyPage\" />\r\n                )}\r\n                <input type=\"file\" ref={fileInput} onChange={handleImageUpload} style={{display: 'none'}} />\r\n            </div>\r\n            <div className=\"info-container\">\r\n                {user && (\r\n                    <div>\r\n                        <label>Name: </label>\r\n                        <input type=\"text\" defaultValue={user.name} readOnly={true}/>\r\n                    </div>\r\n                )}\r\n                {user && (\r\n                    <div>\r\n                        <label>Address: </label>\r\n                        <input type=\"text\" defaultValue={user.address} />\r\n                    </div>\r\n                )}\r\n                {user && (\r\n                    <div>\r\n                        <label>Phone: </label>\r\n                        <input type=\"text\" defaultValue={user.number} />\r\n                    </div>\r\n                )}\r\n                {passwordChanged && <p>비밀번호 변경되었습니다.</p>}\r\n                <div>\r\n                    <button className=\"edit-MyPage-button\" onClick={handleEditProfileClick}>Edit Profile</button>\r\n                    <button className=\"change-password-button\" onClick={handleOpenPasswordModal}>Change Password</button>\r\n                    <button className=\"save-button\">Save</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n    {isPasswordModalOpen && (\r\n                <div className=\"password-modal\">\r\n                    <h2>Change Password</h2>\r\n                    <div>\r\n                    <span>변경할 비밀번호</span>\r\n                    <input\r\n                        ref={newPasswordRef}\r\n                        type=\"password\"\r\n                        className=\"password-input\"\r\n                        placeholder=\"New password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        <span>변경할 비밀번호 확인</span>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"password-input\"\r\n                        placeholder=\"Confirm new password\"\r\n                        value={passwordConfirmation}\r\n                        onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n                    />\r\n                    </div>\r\n\r\n                    <div className=\"password-buttons\">\r\n                        <button className=\"save-button\" onClick={handleSavePassword}>Save</button>\r\n                        <button className=\"close-button\" onClick={handleClosePasswordModal}>Close</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MyPage;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\components\\footer.jsx",[],[],"C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\components\\UserProvider.jsx",["124"],[],"import React, {createContext, useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     // 서버에 현재 로그인 상태를 확인하는 요청\r\n    //     console.log(\"TSET  UserProvider !! ::   \")\r\n    //     console.log(\"TSET  UserProvider  user  !! ::   \" , user)\r\n    //     axios.get('http://localhost:8080/api/v1/checkSession')\r\n    //         .then(response => {\r\n    //             // 서버에서 반환된 사용자 정보를 상태에 설정\r\n    //             console.log(\"TEST response UserProvider:::: \" , response)\r\n    //             setUser(response.data);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.error(\"로그인 상태 확인 중 오류 발생:\", error);\r\n    //             setUser(null);\r\n    //         });\r\n    // }, []);\r\n\r\n\r\n    useEffect(() =>{\r\n        console.log(\"TEST USER ::\" , user)\r\n    },[user])\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser, logout }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\components\\header.jsx",["125"],[],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {UserContext} from './UserProvider';\r\nimport axios from 'axios';\r\n\r\nimport '../css/Header.css';\r\n\r\nconst Header = () => {\r\n    const navigate = useNavigate();\r\n    const {user, logout} = useContext(UserContext);\r\n    const [notificationCount, setNotificationCount] = useState('0');\r\n\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n    const toggleDropdown = () => {\r\n        setShowDropdown(!showDropdown);\r\n        setNotificationCount(0);\r\n    };\r\n    useEffect(() => {\r\n        console.log('TEST NotificationCount ::  ', notificationCount)\r\n    }, [notificationCount])\r\n\r\n    useEffect(() => {\r\n        console.log('TEST Notification ::  ', notifications)\r\n    }, [notifications])\r\n\r\n    useEffect(() => {\r\n        console.log('TEST user Check ::  ', user)\r\n    }, [])\r\n\r\n    const checkNotificationList = async () => {\r\n        const url = `http://localhost:8080/api/v1/notification/${user.userId}`;\r\n\r\n        const res = await axios.get(url);\r\n        if (res.status === 200) {\r\n            // setNotifications(res.data);\r\n            const sortedNotifications = res.data.sort((a, b) => b.noticeId - a.noticeId);\r\n            const top10Notifications = sortedNotifications.slice(0, 10);\r\n            setNotifications(top10Notifications);\r\n\r\n            console.log('TEST Notification List Check ::  ', top10Notifications);\r\n\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!user) return;\r\n\r\n        const socket = new WebSocket(`ws://localhost:8080/ws/notification/user/${user.userId}`);\r\n\r\n\r\n        socket.onmessage = (event) => {\r\n            console.log('Received a message from WebSocket:', event.data);\r\n            setNotifications((prev) => [...prev, event.data]);\r\n            setNotificationCount((prevCount) => prevCount + 1);\r\n        };\r\n\r\n        socket.onopen = () => {\r\n            console.log('WebSocket connection established');\r\n        };\r\n\r\n        socket.onerror = (error) => {\r\n            console.error('There was an error with the WebSocket connection:', error);\r\n        };\r\n\r\n        socket.onclose = (event) => {\r\n            if (event.wasClean) {\r\n                console.log(`WebSocket connection closed cleanly, code=${event.code}, reason=${event.reason}`);\r\n            } else {\r\n                console.error('WebSocket connection died unexpectedly');\r\n            }\r\n        };\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, [user]);\r\n\r\n\r\n    const sessionOut = async () => {\r\n        const res = await axios.post('http://localhost:8080/api/v1/users/logout');\r\n        logout();\r\n        if (res.status !== 200) {\r\n            throw new Error('LogOut Fail!!');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handlePageMove = (id) => {\r\n        switch (id) {\r\n            case 'home':\r\n                navigate('/');\r\n                break;\r\n            case 'login':\r\n                navigate('/Login');\r\n                break;\r\n            case 'signUp':\r\n                navigate('/SignUp');\r\n                break;\r\n            case 'myPage':\r\n                navigate('/MyPage');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"header-nav\">\r\n                <div className=\"nav-content\">\r\n                    <div onClick={() => handlePageMove('home')} className=\"logo-section\">\r\n                        <img src=\"/image/logo.PNG\" className=\"logo-image\" alt=\"Flowbite Logo\"/>\r\n                        <span className=\"logo-text\">헬스짱짱</span>\r\n                    </div>\r\n                    <div className=\"header-buttons\">\r\n                        {user?.name && <p className=\"welcome-text\">Welcome {user.name}</p>}\r\n\r\n                        {!user ? (\r\n                            <button onClick={() => handlePageMove('login')} className=\"head-login-button\">\r\n                                Login\r\n                            </button>\r\n                        ) : (\r\n                            <button onClick={sessionOut} className=\"logout-button\">\r\n                                Logout\r\n                            </button>\r\n                        )}\r\n                        <button onClick={() => handlePageMove(user ? 'myPage' : 'signUp')} className=\"my-page-button\">\r\n                            {user ? 'My Page' : 'Sign up'}\r\n                        </button>\r\n                        {user && (\r\n                            <div className=\"notification-icon\" onClick={toggleDropdown}>\r\n                                <img src=\"/image/—Pngtree—bell vector icon_3791349.png\" alt=\"Notification Icon\" onClick={checkNotificationList}/>\r\n                                {notificationCount > 0 &&\r\n                                    <span className=\"notification-count\">{notificationCount}</span>}\r\n                                {showDropdown && (\r\n                                    <div className=\"notification-dropdown\">\r\n                                        {notifications.map((notification, idx) => (\r\n                                            <div\r\n                                                key={idx}\r\n                                                className={`notification-item ${idx < notificationCount ? \"unread\" : \"\"}`}\r\n                                            >\r\n                                                {notification.content}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\components\\SessionCheck.jsx",[],[],"C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\layout\\content.jsx",["126","127","128"],[],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Card from \"../page/card\";\r\nimport '../css/Content.css';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SearchBar from \"../page/SearchBar\";\r\nimport axios from \"axios\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst Content = () => {\r\n    const location = useLocation();\r\n\r\n    const [searchItem, setSearchItem] = useState({\r\n        area: '',\r\n        name: ''\r\n    });\r\n    const [points, setPoints] = useState({ content: [] });\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        loadPoints(currentPage);\r\n    }, [currentPage]);\r\n\r\n    const loadPoints = (page) => {\r\n        axios.get(`http://localhost:8080/api/v1/point?page=${page - 1}&size=5`)\r\n            .then(response => {\r\n                setPoints(response.data);\r\n                setTotalPages(response.data.totalPages);\r\n\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    const handleSearch = (searchInput) => {\r\n        setSearchItem(searchInput);\r\n        axios.get(`http://localhost:8080/api/v1/point/search`, {\r\n            params: {\r\n                pointName: searchInput.name,\r\n                page: 0,\r\n                size: 5\r\n            }\r\n        })\r\n            .then(response => {\r\n                setPoints(response.data);\r\n                setTotalPages(response.data.totalPages);\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <SearchBar onSearch={handleSearch} />\r\n            <div className=\"card-container\">\r\n                {points.content ? (\r\n                    points.content.map((data, index) =>  <Card key={index} data={data} type=\"content\" />)\r\n                ) : (\r\n                    <p>Loading...</p>\r\n                )}\r\n            </div>\r\n            <Pagination totalPage={totalPages} currentPage={currentPage} onPageChange={handlePageChange} />\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Content;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\TrainerInfo .jsx",["129"],[],"import React, { useEffect, useState } from 'react';\r\nimport Card from \"./card\";\r\nimport '../css/TrainerInfo.css'\r\n\r\nconst TrainerInfo = (props) => {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const trainerInfo = props.data.trainerInfo;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card-container\">\r\n                {trainerInfo ? (\r\n                    <Card data={trainerInfo[currentIndex]} type=\"trainer\" totalData={props} />\r\n                ) : (\r\n                    <p>Loading...</p>\r\n                )}\r\n            </div>\r\n            <div className=\"button-container\">\r\n                {trainerInfo && trainerInfo.map((_, index) => (\r\n                    <button\r\n                        key={index}\r\n                        onClick={() => setCurrentIndex(index)}\r\n                        className={`index-button-trainer ${currentIndex === index ? 'index-button-trainer-selected' : ''}`}>\r\n                        {index + 1}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrainerInfo;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\PointInfo.jsx",["130","131","132","133","134"],[],"import React, {useEffect} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ImageSlider from \"./ImageSlider\";\r\nimport '../css/PointInfo.css';\r\nimport { Map, MapMarker } from 'react-kakao-maps-sdk';\r\nimport KakaoMap from \"./KakaoMap\";\r\n\r\nconst PointInfo = (props) => {\r\n    useEffect(() => {\r\n        console.log(\"TEST PointInfo Data : \" , props)\r\n    },[])\r\n\r\n    let data = props.data;\r\n\r\n    return (\r\n        <div className=\"PointInfo\">\r\n            <div className=\"KakaoMap\">\r\n\r\n                <KakaoMap address={data.pointAddress}></KakaoMap>\r\n            </div>\r\n            <div className=\"gymInfo\">\r\n                <div className=\"gymAddress\">\r\n                    <span className=\"address\">주소</span>\r\n                    <span>{data.pointAddress}</span>\r\n                </div>\r\n                <div className=\"gymNumber\">\r\n                    <span  className=\"phone\">전화번호</span>\r\n                    <span>{data.managerPhone}</span>\r\n                </div>\r\n                <div className=\"gymPrice\">\r\n                    <span className=\"price\">가격</span>\r\n                    <div>\r\n                        {data.productInfo.map((item, index) =>(\r\n                            <span key={index}>{item}</span>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"gymTags\">\r\n                    <span className=\"tag\">해시태그</span>\r\n                    <div>\r\n                        {data.tagInfo.map((item, index) => (\r\n                            <span key={index}>#{item}</span>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"gymInfoText\">\r\n                    <span className=\"info\">소개글</span>\r\n                    <span className=\"infoText\">{data.info}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PointInfo;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\card.jsx",["135","136","137"],[],"import {useNavigate} from 'react-router-dom';\r\nimport ImageSlider from \"./ImageSlider\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport '../css/Card.css';\r\nimport Calendar from \"./Calender\"  // Fixed the import here\r\nimport Modal from 'react-modal';\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../components/UserProvider\";\r\n\r\nconst Card = ({data, type, totalData}) => {\r\n    const {user, setUser, logout} = useContext(UserContext);\r\n\r\n    const navigate = useNavigate();\r\n    let history;\r\n    let imageSliderProps;\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n\r\n    if (type === 'content') {\r\n        imageSliderProps = data.pointImagePath;\r\n    } else if (type === 'trainer') {\r\n        imageSliderProps = data.trainerImage;\r\n        history = data.trainerHistory;\r\n    }\r\n\r\n    const handleClick = () => {\r\n        navigate(`/Detail/${data.pointName}`, {state: {data: data}});\r\n    };\r\n\r\n    const handleReservation = () => {\r\n        console.log(\"handleReservation is called!\");\r\n        if (!user) {\r\n            alert(\"로그인을 진행해야합니다.\")\r\n            return;\r\n        }\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: '60%',\r\n            height: '60%',\r\n            border: '1px solid green',\r\n            borderRadius: '10px',\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        type === 'content' ? (\r\n            <div className=\"card m-2\" onClick={handleClick}>\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-md-6\">\r\n                        <ImageSlider imageSliderProps={imageSliderProps}/>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{data.pointName}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            type === 'trainer' ? (\r\n                <div className=\"card card-trainer m-2\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-6\">\r\n                            <ImageSlider imageSliderProps={imageSliderProps}/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"button-container-trainer\">\r\n                                    <button className=\"button-trainer\" onClick={handleReservation}>Make a P.T reservation</button>\r\n                                </div>\r\n                                <div className='trainer-nameTag'>\r\n                                    <h2 className=\"trainer-label\">trainer\r\n                                        <span className=\"trainer-name\">{data.name}</span>\r\n                                    </h2>\r\n                                </div>\r\n                                <div className=\"trainer-info\">\r\n                                    <span className=\"prize-history-label\">트레이너 이력</span>\r\n                                    <div className=\"prize-history-label-content\">\r\n                                        {history.map((item, index) => (\r\n                                            <div key={index}>\r\n                                                <span>{item}</span>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Modal\r\n                        isOpen={modalIsOpen}\r\n                        onRequestClose={closeModal}\r\n                        contentLabel=\"Reservation Modal\"\r\n                        style={customStyles}\r\n                    >\r\n                        <div className=\"modal-header\">\r\n                            <h2>Make a reservation</h2>\r\n                            <button onClick={closeModal}>close</button>\r\n                        </div>\r\n                        <div className=\"modal-content\">\r\n                                <Calendar data={data} totalData={totalData} closeModal={closeModal}/>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\layout\\Pagination.jsx",[],[],"C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\SearchBar.jsx",[],[],"C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\KakaoMap.jsx",["138"],[],"import React, { useEffect, useState } from 'react';\r\n\r\nconst KakaoMap = ({ address }) => {\r\n    const [map, setMap] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (window.kakao && window.kakao.maps && map !== null) {\r\n            // 주소-좌표 변환 객체를 생성합니다\r\n            const geocoder = new window.kakao.maps.services.Geocoder();\r\n\r\n            // 주소로 좌표를 검색합니다\r\n            geocoder.addressSearch(address, function(result, status) {\r\n                // 정상적으로 검색이 완료됐으면\r\n                if (status === window.kakao.maps.services.Status.OK) {\r\n                    const coords = new window.kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n                    // 결과값으로 받은 위치를 마커로 표시합니다\r\n                    const marker = new window.kakao.maps.Marker({\r\n                        map: map,\r\n                        position: coords\r\n                    });\r\n\r\n                    // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n                    map.setCenter(coords);\r\n                }\r\n            });\r\n        }\r\n    }, [address, map]);\r\n\r\n    useEffect(() => {\r\n        if (window.kakao && window.kakao.maps) {\r\n            const container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스\r\n            const options = { //지도를 생성할 때 필요한 기본 옵션\r\n                center: new window.kakao.maps.LatLng(33.450701, 126.570667), //지도의 중심좌표.\r\n                level: 3 //지도의 레벨(확대, 축소 정도)\r\n            };\r\n\r\n            // 지도 생성 및 객체 리턴\r\n            const mapInstance = new window.kakao.maps.Map(container, options);\r\n            setMap(mapInstance);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"map\" style={{width: '100%', height: '100%'}}></div>\r\n    );\r\n};\r\n\r\nexport default KakaoMap;\r\n","C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\ImageSlider.jsx",[],[],"C:\\Users\\Kwan\\Desktop\\개발자\\amazing-admin-web\\src\\page\\Calender.jsx",["139","140","141","142"],[],"import React, {useState, useEffect, useContext} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport '../css/Calender.css';\r\nimport axios from 'axios';\r\nimport {UserContext} from \"../components/UserProvider\";\r\nconst Calendar = ({ data, totalData, closeModal }) => {\r\n\r\n    const {user, setUser, logout} = useContext(UserContext);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [open, setOpen] = useState(true);\r\n    const [displayTimeButton, setDisplayTimeButton] = useState(false);\r\n    const [selectedTime, setSelectedTime] = useState({start: null, end: null});\r\n    const [ReservationView, setReservationView] = useState(false);\r\n\r\n    const [reservation, setReservation] = useState({\r\n        userId: user.userId,\r\n        trainerId: data.trainerId,\r\n        date: null,\r\n        startTime: null,\r\n        endTime: null,\r\n    });\r\n\r\n    const [bookedTimeSlots, setBookedTimeSlots] = useState([]);\r\n\r\n    const [timeSlots, setTimeSlots] = useState([\r\n        '09:00 ~ 10:00',\r\n        '10:00 ~ 11:00',\r\n        '11:00 ~ 12:00',\r\n        '12:00 ~ 13:00',\r\n        '13:00 ~ 14:00',\r\n        '14:00 ~ 15:00',\r\n        '15:00 ~ 16:00',\r\n        '16:00 ~ 17:00',\r\n        '17:00 ~ 18:00',\r\n        '18:00 ~ 19:00',\r\n        '19:00 ~ 20:00',\r\n        '20:00 ~ 21:00',\r\n        '21:00 ~ 22:00'\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        console.log(' test reservation ::', reservation)\r\n    }, [reservation]);\r\n\r\n\r\n    const submitReservation = () => {\r\n        // axios.post('http://localhost:8080/api/v1/reservation', reservation)\r\n        axios.post('/api/v1/reservation', reservation)\r\n            .then(response => {\r\n                console.log(response);\r\n                alert('예약요청이 되었습니다. 트레이너가 확인 후 예약완료가 된다면 완료안내가 될 예정입니다.');\r\n                setOpen(true);\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    };\r\n    const utcToKst = (date) => {\r\n        date.setHours(date.getHours() + 9);\r\n        return date;\r\n    };\r\n\r\n\r\n    const handleDateChange = (date) => {\r\n        const utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n        const kstDate = utcToKst(utcDate);  // Convert UTC to KST\r\n        setSelectedDate(kstDate);\r\n        setReservation(prevState => ({...prevState, date: kstDate}));\r\n        setOpen(false);\r\n        setDisplayTimeButton(true);\r\n    };\r\n\r\n    const handleReturn = () => {\r\n        setSelectedTime({start: null, end: null});\r\n        setReservation(prevState => ({...prevState, startTime: null, endTime: null}));\r\n        setDisplayTimeButton(false);\r\n        setSelectedDate(null);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleReservation = () => {\r\n        if (!selectedTime.start || !selectedTime.end) {\r\n            alert('시간을 선택해주세요!');\r\n            return;\r\n        }\r\n        if (selectedTime.start && selectedTime.end) {\r\n            const [startHours, startMinutes] = selectedTime.start.split(':');\r\n            const [endHours, endMinutes] = selectedTime.end.split(':');\r\n            setReservation(prevState => ({\r\n                ...prevState,\r\n                startTime: `${startHours}:${startMinutes}`,\r\n                endTime: `${endHours}:${endMinutes}`\r\n            }));\r\n        }\r\n        setReservationView(true);\r\n    };\r\n    useEffect(() => {\r\n        if (selectedDate) {\r\n            const formattedDate = formatDate(selectedDate);\r\n            axios.get('http://localhost:8080/api/v1/reservation', {\r\n                params: {\r\n                    // date: formattedDate,\r\n                    date: selectedDate,\r\n                    trainerId: data.trainerId\r\n                }\r\n            })\r\n                .then(response => {\r\n                    const reservedTimes = response.data.map(reservation => {\r\n                        return `${reservation.startTime} ~ ${reservation.endTime}`;\r\n                    });\r\n                    setBookedTimeSlots(reservedTimes);\r\n                })\r\n                .catch(error => {\r\n                    console.error('There was an error fetching the reservations!', error);\r\n                });\r\n        }\r\n    }, [selectedDate, data.trainerId]);\r\n\r\n    const handleCloseAndCancel = () => {\r\n        closeModal(); // 부모 컴포넌트의 closeModal 함수를 호출하여 모달을 닫습니다.\r\n    }\r\n\r\n    useEffect(() =>{\r\n\r\n    },[reservation])\r\n    const formatDate = (date) => {\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n\r\n        return `${year}/${month < 10 ? '0' + month : month}/${day < 10 ? '0' + day : day}`;\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!ReservationView ? (\r\n                <>\r\n                    <DatePicker\r\n                        className=\"my-custom-datepicker\"\r\n                        selected={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        onInputClick={() => setOpen(true)}\r\n                        open={open}\r\n                        onCalendarClose={() => setOpen(false)}\r\n                        onCalendarOpen={() => setOpen(true)}\r\n                        minDate={new Date()}\r\n                        dateFormat=\"yyyy/MM/dd\"\r\n                        isClearable\r\n                        showYearDropdown\r\n                        showPopperArrow={false}\r\n                    />\r\n                    {displayTimeButton && (\r\n                        <div className=\"time-container\">\r\n                            <div className=\"time-list\">\r\n                                {timeSlots.map((timeSlot, index) => {\r\n                                    const [start, end] = timeSlot.split('~').map(time => time.trim());\r\n                                    const isBooked = bookedTimeSlots.includes(timeSlot); // 해당 시간 슬롯이 예약되었는지 확인\r\n                                    return (\r\n                                        <button\r\n                                            key={index}\r\n                                            className={`time-button ${selectedTime.start === start && selectedTime.end === end ? 'selected' : ''} ${isBooked ? 'booked' : ''}`}\r\n                                            onClick={() => !isBooked && setSelectedTime({start, end})}\r\n                                            disabled={isBooked} // 예약된 경우 버튼 비활성화\r\n                                        >\r\n                                            {start} ~ {end}\r\n                                        </button>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <div className=\"time-button-check\">\r\n                                <button className=\"returnDate\" onClick={handleReturn}>날짜 다시고르기</button>\r\n                                <button className=\"notificationCheck\" onClick={handleReservation}>예약하러가기</button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <div>\r\n                    <div className=\"input-container\">\r\n                        <div className = \"check-name\">\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <input type=\"text\" id=\"name\" name=\"name\" defaultValue={user.name} readOnly/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"gymName\">Gym Name</label>\r\n                            <input type=\"text\" id=\"gymName\" name=\"gymName\" defaultValue={totalData.data.pointName}\r\n                                   readOnly/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"trainerName\">Trainer Name</label>\r\n                            <input type=\"text\" id=\"trainerName\" name=\"trainerName\" defaultValue={data.name}\r\n                                   readOnly/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"date\">Date</label>\r\n                            <input type=\"text\" id=\"date\" name=\"date\"\r\n                                   defaultValue={selectedDate ? formatDate(selectedDate) : ''} readOnly/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"hour\">Hour</label>\r\n                            <input type=\"text\" id=\"hour\" name=\"hour\"\r\n                                   defaultValue={`${selectedTime.start} ~ ${selectedTime.end}`} readOnly/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-container-notification\">\r\n                        <button className=\"reservationComplete\" onClick={submitReservation}>예약완료</button>\r\n                        <button className=\"reservationCancel \" onClick={handleCloseAndCancel}>예약취소</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n",{"ruleId":"143","severity":1,"message":"144","line":2,"column":16,"nodeType":"145","messageId":"146","endLine":2,"endColumn":25},{"ruleId":"143","severity":1,"message":"147","line":2,"column":27,"nodeType":"145","messageId":"146","endLine":2,"endColumn":35},{"ruleId":"143","severity":1,"message":"148","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"150","line":32,"column":25,"nodeType":"151","messageId":"152","endLine":32,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":34,"column":25,"nodeType":"151","messageId":"152","endLine":34,"endColumn":27},{"ruleId":"149","severity":1,"message":"153","line":54,"column":24,"nodeType":"151","messageId":"152","endLine":54,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":56,"column":33,"nodeType":"151","messageId":"152","endLine":56,"endColumn":35},{"ruleId":"149","severity":1,"message":"150","line":58,"column":40,"nodeType":"151","messageId":"152","endLine":58,"endColumn":42},{"ruleId":"143","severity":1,"message":"154","line":8,"column":18,"nodeType":"145","messageId":"146","endLine":8,"endColumn":25},{"ruleId":"143","severity":1,"message":"155","line":8,"column":27,"nodeType":"145","messageId":"146","endLine":8,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":83,"column":8,"nodeType":"158","endLine":83,"endColumn":14,"suggestions":"159"},{"ruleId":"143","severity":1,"message":"160","line":97,"column":11,"nodeType":"145","messageId":"146","endLine":97,"endColumn":21},{"ruleId":"143","severity":1,"message":"148","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"161","line":30,"column":8,"nodeType":"158","endLine":30,"endColumn":10,"suggestions":"162"},{"ruleId":"143","severity":1,"message":"163","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":27},{"ruleId":"143","severity":1,"message":"164","line":10,"column":11,"nodeType":"145","messageId":"146","endLine":10,"endColumn":19},{"ruleId":"143","severity":1,"message":"165","line":12,"column":12,"nodeType":"145","messageId":"146","endLine":12,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"166","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":21},{"ruleId":"143","severity":1,"message":"167","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":19},{"ruleId":"143","severity":1,"message":"168","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":13},{"ruleId":"143","severity":1,"message":"169","line":5,"column":15,"nodeType":"145","messageId":"146","endLine":5,"endColumn":24},{"ruleId":"156","severity":1,"message":"170","line":11,"column":7,"nodeType":"158","endLine":11,"endColumn":9,"suggestions":"171"},{"ruleId":"143","severity":1,"message":"144","line":7,"column":21,"nodeType":"145","messageId":"146","endLine":7,"endColumn":30},{"ruleId":"143","severity":1,"message":"154","line":11,"column":18,"nodeType":"145","messageId":"146","endLine":11,"endColumn":25},{"ruleId":"143","severity":1,"message":"155","line":11,"column":27,"nodeType":"145","messageId":"146","endLine":11,"endColumn":33},{"ruleId":"143","severity":1,"message":"172","line":18,"column":27,"nodeType":"145","messageId":"146","endLine":18,"endColumn":33},{"ruleId":"143","severity":1,"message":"154","line":9,"column":18,"nodeType":"145","messageId":"146","endLine":9,"endColumn":25},{"ruleId":"143","severity":1,"message":"155","line":9,"column":27,"nodeType":"145","messageId":"146","endLine":9,"endColumn":33},{"ruleId":"143","severity":1,"message":"173","line":26,"column":23,"nodeType":"145","messageId":"146","endLine":26,"endColumn":35},{"ruleId":"143","severity":1,"message":"174","line":100,"column":19,"nodeType":"145","messageId":"146","endLine":100,"endColumn":32},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'setUser' is assigned a value but never used.","'logout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["175"],"'handleSave' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["176"],"'useContext' is defined but never used.","'location' is assigned a value but never used.","'searchItem' is assigned a value but never used.","'useNavigate' is defined but never used.","'ImageSlider' is defined but never used.","'Map' is defined but never used.","'MapMarker' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["177"],"'marker' is assigned a value but never used.","'setTimeSlots' is assigned a value but never used.","'formattedDate' is assigned a value but never used.",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [navigate, user]",{"range":"184","text":"185"},"Update the dependencies array to be: [user]",{"range":"186","text":"187"},"Update the dependencies array to be: [props]",{"range":"188","text":"189"},[2808,2814],"[navigate, user]",[964,966],"[user]",[374,376],"[props]"]